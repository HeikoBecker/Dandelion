
(** File: FPTaylorReal2Float, function: azimuth **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot0SEPsp0dot4_";

val _ = realZeroLib.useBinary := true;

(* err = 3.9104814326476230288713599861586107239661174321026e-9 *)
(* infnorm = 2.718562559973619862510465255496606028557093479156e-9 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "lat1");
    poly := [
    (50000000135927169520044799355673603713512420654297)/(50000000000000000000000000000000000000000000000000);
    (-1225409217893488553021618054153507593184713186929)/(2500000000000000000000000000000000000000000000000000000);
    (-24999283897945898114123508548800600692629814147949)/(50000000000000000000000000000000000000000000000000);
    (-3061900846609820763151443845373478325200267136097)/(20000000000000000000000000000000000000000000000000000);
    (21203466323626414535841178121700068004429340362549)/(500000000000000000000000000000000000000000000000000);
    (-16524268822046756562821334668456074723508208990097)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (19552407163238115144356799930793053619830587160513)/(5000000000000000000000000000000000000000000000000000000000) ;
  iv := [("lat1",
    ((0)/(1),
    (2)/(5)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      