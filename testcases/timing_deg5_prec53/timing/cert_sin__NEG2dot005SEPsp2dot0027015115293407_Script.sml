
(** File: TransBenchsErrorBoundsSmall, function: pendulum2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__NEG2dot005SEPsp2dot0027015115293407_";

val _ = realZeroLib.useBinary := true;

(* err = 3.5606979081923329067318489160372699774879991308516e-4 *)
(* infnorm = 3.5590667072406668579354266342634374950175260587156e-4 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "_tmp32");
    poly := [
    (-30434149998892724970659756607494665983648651774729)/(2000000000000000000000000000000000000000000000000000000000000);
    (99874723121540354142666728876065462827682495117187)/(100000000000000000000000000000000000000000000000000);
    (3909513713129769689778270791384443862137576530813)/(50000000000000000000000000000000000000000000000000000000000);
    (-82064949798644828971028175601531984284520149230957)/(500000000000000000000000000000000000000000000000000);
    (-300696920459742730865722106455332172936234513827)/(8000000000000000000000000000000000000000000000000000000000);
    (70361285135159398404502972823593154316768050193787)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (8901744770480832266829622290093174943719997827129)/(25000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp32",
    ((-401)/(200),
    (3607746312423147149)/(1801439850948198400)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      