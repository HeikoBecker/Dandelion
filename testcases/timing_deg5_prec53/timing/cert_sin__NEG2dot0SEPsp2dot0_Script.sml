
(** File: TransBenchsErrorBoundsSmall, function: ex2_2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__NEG2dot0SEPsp2dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 3.5012358135519544182565307176834957828512928896736e-4 *)
(* infnorm = 3.4996124402645721028644781945958710540656424079374e-4 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (-8241756251907875592332267028571719195279010605759)/(500000000000000000000000000000000000000000000000000000000000);
    (9987651300427277112348178889078553766012191772461)/(10000000000000000000000000000000000000000000000000);
    (85134805111127717482205942250002251789342544441297)/(1000000000000000000000000000000000000000000000000000000000000);
    (-16415384823137135761328408989356830716133117675781)/(100000000000000000000000000000000000000000000000000);
    (-1285407810637696375246436950764307015782766940859)/(31250000000000000000000000000000000000000000000000000000000);
    (35210611158577051829632331703123782062903046607971)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (1094136191734985755705165849276092432141029028023)/(3125000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-2)/(1),
    (2)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      