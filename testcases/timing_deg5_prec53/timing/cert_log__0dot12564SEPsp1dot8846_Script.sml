
(** File: MLClassifier, function: predictGaussianNB **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__0dot12564SEPsp1dot8846_";

val _ = realZeroLib.useBinary := true;

(* err = 2.5941013399694425615128580216686132545139865341634e-2 *)
(* infnorm = 1.89340479987312941323711538878114442020764356835697e-2 *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "_tmp4");
    poly := [
    (-30723249489417159274751156772254034876823425292969)/(10000000000000000000000000000000000000000000000000);
    (5565712877467005)/(562949953421312);
    (-1126536879726695)/(70368744177664);
    (4128471523893451)/(281474976710656);
    (-3741147538516479)/(562949953421312);
    (29032272804826103618225374702888075262308120727539)/(25000000000000000000000000000000000000000000000000)
    ];
  eps := (12970506699847212807564290108343066272569932670817)/(500000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp4",
    ((3141)/(25000),
    (9423)/(5000)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``32:num``;

val _ = export_theory();
      