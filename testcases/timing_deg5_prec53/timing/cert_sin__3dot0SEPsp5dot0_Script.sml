
(** File: CompoundFunction, function: compundExp **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__3dot0SEPsp5dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 3.1947306470017030828301084086747211970265086833727e-5 *)
(* infnorm = 3.1813834956744033677314087168741721092922630950631e-5 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (-17746926631067136415076390676404116675257682800293)/(12500000000000000000000000000000000000000000000000);
    (362594641386311)/(140737488355328);
    (-9665491700355698378999136366473976522684097290039)/(20000000000000000000000000000000000000000000000000);
    (-242237025112149867434041539127065334469079971313477)/(1000000000000000000000000000000000000000000000000000);
    (14773967087416142729416890233551384881138801574707)/(200000000000000000000000000000000000000000000000000);
    (-51930578447159283367318138857626763638108968734741)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (31947306470017030828301084086747211970265086833727)/(1000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((3)/(1),
    (5)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      