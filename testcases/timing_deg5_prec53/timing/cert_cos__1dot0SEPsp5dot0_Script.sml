
(** File: TransBenchsErrorBoundsSmall, function: pendulum2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__1dot0SEPsp5dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 4.3197912388672015391226159791426153047302486823635e-3 *)
(* infnorm = 2.3826136133018325760259805192703682786886708793394e-3 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "w");
    poly := [
    (67648896684652182198504988264176063239574432373047)/(100000000000000000000000000000000000000000000000000);
    (925284671279763)/(1125899906842624);
    (-1441372965193149)/(1125899906842624);
    (16995601975654575643837063125829445198178291320801)/(50000000000000000000000000000000000000000000000000);
    (-1913316920290800138282349962537409737706184387207)/(100000000000000000000000000000000000000000000000000);
    (-387860979216910969902265549080766504630446434021)/(400000000000000000000000000000000000000000000000000)
    ];
  eps := (8639582477734403078245231958285230609460497364727)/(2000000000000000000000000000000000000000000000000000) ;
  iv := [("w",
    ((1)/(1),
    (5)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      