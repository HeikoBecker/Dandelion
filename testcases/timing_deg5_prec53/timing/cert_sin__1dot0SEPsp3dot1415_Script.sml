
(** File: TransBenchsErrorBoundsSmall, function: ex2_9 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__1dot0SEPsp3dot1415_";

val _ = realZeroLib.useBinary := true;

(* err = 5.5271380234389748512373630425073025472947029565613e-5 *)
(* infnorm = 5.5193666742742487908607416090468347033962566252347e-5 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (15730065905990776864431524018073105253279209136963)/(250000000000000000000000000000000000000000000000000);
    (442733006256081)/(562949953421312);
    (29062012553048244267728250633808784186840057373047)/(100000000000000000000000000000000000000000000000000);
    (-36836342190860532630480861371324863284826278686523)/(100000000000000000000000000000000000000000000000000);
    (14735863500194351649597024334070738404989242553711)/(200000000000000000000000000000000000000000000000000);
    (-18909550722234532826177000330858390952926129102707)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (55271380234389748512373630425073025472947029565613)/(1000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((1)/(1),
    (6283)/(2000)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      