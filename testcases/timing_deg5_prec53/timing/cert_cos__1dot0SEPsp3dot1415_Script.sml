
(** File: TransBenchsErrorBoundsSmall, function: ex2_9 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__1dot0SEPsp3dot1415_";

val _ = realZeroLib.useBinary := true;

(* err = 3.0746194483838657637820230907085029758453081140088e-5 *)
(* infnorm = 3.0678291714526119708537607902015363156450558819494e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (4920174973873347457065108301321743056178092956543)/(5000000000000000000000000000000000000000000000000);
    (1080782929968365953243836230512897600419819355011)/(25000000000000000000000000000000000000000000000000);
    (-13455404975964502245489029519376344978809356689453)/(25000000000000000000000000000000000000000000000000);
    (13284611429880261151276199527160315483342856168747)/(2500000000000000000000000000000000000000000000000000);
    (52831992368872142395996860386730986647307872772217)/(1000000000000000000000000000000000000000000000000000);
    (-34621610831799959351329221135529223829507827758789)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (3843274310479832204727528863385628719806635142511)/(125000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((1)/(1),
    (6283)/(2000)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      