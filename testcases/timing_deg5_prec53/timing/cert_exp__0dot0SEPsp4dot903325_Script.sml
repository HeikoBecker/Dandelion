
(** File: TransBenchsErrorBoundsSmall, function: pendulum2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot0SEPsp4dot903325_";

val _ = realZeroLib.useBinary := true;

(* err = 0.218816371477346599721720785752147855842051670624035 *)
(* infnorm = 0.139233401834974081498563166915452683414177707811286 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "_tmp31");
    poly := [
    (86076717602136032514437147256103344261646270751953)/(100000000000000000000000000000000000000000000000000);
    (3203308956101945)/(1125899906842624);
    (-34323442556604963904476335301296785473823547363281)/(10000000000000000000000000000000000000000000000000);
    (1774528310552035)/(562949953421312);
    (-92044441146845090706563041749177500605583190917969)/(100000000000000000000000000000000000000000000000000);
    (127987214208784588764800105309404898434877395629883)/(1000000000000000000000000000000000000000000000000000)
    ];
  eps := (43763274295469319944344157150429571168410334124807)/(200000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp31",
    ((0)/(1),
    (196133)/(40000)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      