
(** File: TransBenchsErrorBoundsSmall, function: integrate18257 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__0dot0SEPsp3dot14_";

val _ = realZeroLib.useBinary := true;

(* err = 1.1635748764271487485440085279738148458977114861063e-3 *)
(* infnorm = 5.95012503355365787663482290485956746738208222459e-4 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (3718818785490448736120658312920284060965059325099)/(6250000000000000000000000000000000000000000000000000);
    (98656012188654773620299920366960577666759490966797)/(100000000000000000000000000000000000000000000000000);
    (48998607825437141827240594693648745305836200714111)/(1000000000000000000000000000000000000000000000000000);
    (-231067427833732769171248833117715548723936080932617)/(1000000000000000000000000000000000000000000000000000);
    (82753803771923)/(2251799813685248);
    (14739094014024144396442575488670456707041012123227)/(2500000000000000000000000000000000000000000000000000000)
    ];
  eps := (11635748764271487485440085279738148458977114861063)/(10000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (157)/(50)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      