
(** File: Herbie, function: complex_square_root **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sqrt__0dot00482842712474619SEPsp48dot2842712474619_";

val _ = realZeroLib.useBinary := true;

(* err = 0.18169196275119903286602428791137590495991999418412 *)
(* infnorm = 0.17054137025399719240664085445911329356676717615458 *)
Definition sqrt_example_def:
  sqrt_example =
  <|
    transc := Fun Sqrt (Var "_tmp");
    poly := [
    (11843745186498327859325740973872598260641098022461)/(50000000000000000000000000000000000000000000000000);
    (65266586963864992032569034563493914902210235595703)/(100000000000000000000000000000000000000000000000000);
    (-28399063412946456974594866551342420279979705810547)/(500000000000000000000000000000000000000000000000000);
    (13431953788335068179782272324018776998855173587799)/(5000000000000000000000000000000000000000000000000000);
    (-57344166504914441764330368389579462018446065485477)/(1000000000000000000000000000000000000000000000000000000);
    (44606719851767675574111000208477051387490064371377)/(100000000000000000000000000000000000000000000000000000000)
    ];
  eps := (4542299068779975821650607197784397623997999854603)/(25000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp",
    ((695849683193361119)/(144115188075855872000),
    (13590814124870337)/(281474976710656)))];
  |>
End

Theorem checkerSucceeds = validateCert sqrt_example_def ``32:num``;

val _ = export_theory();
      