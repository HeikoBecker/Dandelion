
(** File: CompoundFunction, function: compundExp **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__3dot0SEPsp5dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 2.7901526865152598874855948394270937058510559813901e-5 *)
(* infnorm = 2.7559876568646929632360183876436389072814719917597e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (-3587597770992659)/(1125899906842624);
    (64277393916702747489466673869173973798751831054687)/(10000000000000000000000000000000000000000000000000);
    (-316453164050241)/(70368744177664);
    (12505398723157863383192989203962497413158416748047)/(10000000000000000000000000000000000000000000000000);
    (-7307934769299791188945647490982082672417163848877)/(50000000000000000000000000000000000000000000000000);
    (15031850899983655121122660958121741714421659708023)/(2500000000000000000000000000000000000000000000000000)
    ];
  eps := (27901526865152598874855948394270937058510559813901)/(1000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((3)/(1),
    (5)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      