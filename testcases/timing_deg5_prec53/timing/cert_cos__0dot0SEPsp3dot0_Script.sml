
(** File: TransBenchsErrorBoundsSmall, function: ex2_3 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot0SEPsp3dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 1.2501913971483837228496336429026113886256441999241e-4 *)
(* infnorm = 6.7706755149174927075053429892582247774132660438784e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (12500846330028433928127640228922246024012565612793)/(12500000000000000000000000000000000000000000000000);
    (-10455809264507556852891179133280274982098489999771)/(5000000000000000000000000000000000000000000000000000);
    (-551099767967471)/(1125899906842624);
    (-19736745840854916927975537532802263740450143814087)/(1000000000000000000000000000000000000000000000000000);
    (2360711213685227904957031341837137006223201751709)/(40000000000000000000000000000000000000000000000000);
    (-9392971471443106951451640362904527137288823723793)/(1250000000000000000000000000000000000000000000000000)
    ];
  eps := (12501913971483837228496336429026113886256441999241)/(100000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (3)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      