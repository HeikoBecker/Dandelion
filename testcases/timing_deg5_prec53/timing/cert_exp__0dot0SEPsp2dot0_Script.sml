
(** File: CompoundFunction, function: testDepth2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot0SEPsp2dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 1.2307491648830145259483024678189594454991682982625e-4 *)
(* infnorm = 1.22881770058262444073192980952995810654703064583546e-4 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "x");
    poly := [
    (1125761554778685)/(1125899906842624);
    (784552453222490779605191590917456778697669506073)/(781250000000000000000000000000000000000000000000);
    (47652372749521798578342668406548909842967987060547)/(100000000000000000000000000000000000000000000000000);
    (213743340110312457502672600639925803989171981811523)/(1000000000000000000000000000000000000000000000000000);
    (13964009226912643289383875178089056134922429919243)/(50000000000000000000000000000000000000000000000000000);
    (23752865777034067040762721489954856224358081817627)/(1000000000000000000000000000000000000000000000000000)
    ];
  eps := (98459933190641162075864197425516755639933463861)/(800000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (2)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      