
(** File: TransBenchsErrorBoundsSmall, function: ex2_5 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__17dot0SEPsp18dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 17.87595731072599857774061179105808685605772697546 *)
(* infnorm = 1.51172276304652136123323608005404716395170247593045e-7 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (-6332511146397125)/(549755813888);
    (1885365574427051)/(549755813888);
    (-7134767594649227)/(17592186044416);
    (6701942850454663)/(281474976710656);
    (-69396365696602668737824615163845010101795196533203)/(100000000000000000000000000000000000000000000000000);
    (40171072280594383174801009772636462002992630004883)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (893797865536299928887030589552904342802886348773)/(50000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((17)/(1),
    (18)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      