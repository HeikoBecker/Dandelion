
(** File: TransBenchsErrorBoundsSmall, function: ex2_2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__NEG2dot0SEPsp2dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 3.0591260273799667242799289760545785114247385188434e-3 *)
(* infnorm = 2.40579274768860600198190504771365781009625823336414e-3 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (24939858095411654437256743221951182931661605834961)/(25000000000000000000000000000000000000000000000000);
    (61660275242492196102998744274586209171071238266393)/(5000000000000000000000000000000000000000000000000000000000000);
    (-24445273770448597283611036345973843708634376525879)/(50000000000000000000000000000000000000000000000000);
    (-84810747932504916290716577720235731189385441908257)/(10000000000000000000000000000000000000000000000000000000000000);
    (34017901090005797648530005972133949398994445800781)/(1000000000000000000000000000000000000000000000000000);
    (421723518056709927701555133542878084441430687479)/(312500000000000000000000000000000000000000000000000000000000)
    ];
  eps := (15295630136899833621399644880272892557123692594217)/(5000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-2)/(1),
    (2)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      