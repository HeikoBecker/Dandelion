
(** File: TransBenchsErrorBoundsSmall, function: stoutemyerEq2007 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_atan__NEG1dot0ENEG8SEPsp1dot0ENEG8_";

val _ = realZeroLib.useBinary := true;

(* err = 4.8828125000000000000000000000000000000008764900341e-12 *)
(* infnorm = 2.9103830456733703951242711987817093804484438149595e-35 *)
Definition atan_example_def:
  atan_example =
  <|
    transc := Fun Atn (Var "x");
    poly := [
    (-358048113143702735491584288087811067954930499137)/(312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);
    (1)/(1);
    (3023612877258864464684004882962908268920297989063)/(31250000000000000000000000000000000000000000000000000000000000000000000000000000000);
    (-33333333333333331482961625624739099293947219848633)/(100000000000000000000000000000000000000000000000000);
    (-41551184476899303769273581416343170823602623533579)/(50000000000000000000000000000000000000000000000000000000000000000000)
    ];
  eps := (48828125000000000000000000000000000000008764900341)/(10000000000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-1)/(100000000),
    (1)/(100000000)))];
  |>
End

Theorem checkerSucceeds = validateCert atan_example_def ``32:num``;

val _ = export_theory();
      