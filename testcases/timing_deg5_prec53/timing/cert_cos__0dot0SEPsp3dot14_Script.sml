
(** File: TransBenchsErrorBoundsSmall, function: integrate18257 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot0SEPsp3dot14_";

val _ = realZeroLib.useBinary := true;

(* err = 1.2770898867317936482611883192025214963519592881204e-4 *)
(* infnorm = 6.770683311058391586945322770478550150336249109336e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (50003385320083115761491399098304100334644317626953)/(50000000000000000000000000000000000000000000000000);
    (-4182323676816736279793218500344664789736270904541)/(2000000000000000000000000000000000000000000000000000);
    (-137774942006735)/(281474976710656);
    (-9868372888110413590490033186597429448738694190979)/(500000000000000000000000000000000000000000000000000);
    (14754445077735820965325608256080158753320574760437)/(250000000000000000000000000000000000000000000000000);
    (-18785942930094833534793163920539882383309304714203)/(2500000000000000000000000000000000000000000000000000)
    ];
  eps := (3192724716829484120652970798006303740879898220301)/(25000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (157)/(50)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      