
(** File: TransBenchsErrorBoundsSmall, function: integrateStoutemyer2007 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__1dot3688132250546616SEPsp2dot859140914229523_";

val _ = realZeroLib.useBinary := true;

(* err = 1.24952551850391576361631405590252639773732988777525e-5 *)
(* infnorm = 1.24547469617119956704116261831289079726425905955502e-5 *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "_tmp12");
    poly := [
    (-80298193461635480883131776863592676818370819091797)/(50000000000000000000000000000000000000000000000000);
    (354994886881993)/(140737488355328);
    (-3137990613095713032798528274724958464503288269043)/(2500000000000000000000000000000000000000000000000);
    (2567602098838175916917236918379785493016242980957)/(6250000000000000000000000000000000000000000000000);
    (-4664880951751475962607784708779945503920316696167)/(62500000000000000000000000000000000000000000000000);
    (57119962846893020808058949455698893871158361434937)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (4998102074015663054465256223610105590949319551101)/(400000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp12",
    ((6164586730295981)/(4503599627370496),
    (12876425955923819)/(4503599627370496)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``32:num``;

val _ = export_theory();
      