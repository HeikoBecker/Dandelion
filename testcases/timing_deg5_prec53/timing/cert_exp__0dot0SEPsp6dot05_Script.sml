
(** File: Benchmarks_small, function: predictMLPLogistic **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot0SEPsp6dot05_";

val _ = realZeroLib.useBinary := true;

(* err = 1.36077962810979724975103783833552045366266546807143 *)
(* infnorm = 0.98552020649277847798215530025919414647508422660529 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "n1");
    poly := [
    (565834760480318560080248424526416783919557929039)/(39062500000000000000000000000000000000000000000000);
    (6406814123543361)/(562949953421312);
    (-4803678724965239)/(281474976710656);
    (1508112775000461)/(140737488355328);
    (-26234188407001970411158708884613588452339172363281)/(10000000000000000000000000000000000000000000000000);
    (294575014076247)/(1125899906842624)
    ];
  eps := (136077962810979724975103783833552045366266546807143)/(100000000000000000000000000000000000000000000000000) ;
  iv := [("n1",
    ((0)/(1),
    (121)/(20)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      