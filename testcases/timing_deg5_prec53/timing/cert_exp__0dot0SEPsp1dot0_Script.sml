
(** File: TransBenchsErrorBoundsSmall, function: integrate18257 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot0SEPsp1dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 1.14853623324126722000989185744357702626842660543785e-6 *)
(* infnorm = 1.12957365946156121854407060676244269296251808713524e-6 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "_tmp6");
    poly := [
    (99999887043020541099735964962746948003768920898437)/(100000000000000000000000000000000000000000000000000);
    (562994683590459)/(562949953421312);
    (24954804935859950520971040077711222693324089050293)/(50000000000000000000000000000000000000000000000000);
    (170401973731735184580671216281189117580652236938477)/(1000000000000000000000000000000000000000000000000000);
    (34800571164883685459923157168304896913468837738037)/(1000000000000000000000000000000000000000000000000000);
    (69518640516678014210083524915262387366965413093567)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (22970724664825344400197837148871540525368532108757)/(20000000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp6",
    ((0)/(1),
    (1)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      