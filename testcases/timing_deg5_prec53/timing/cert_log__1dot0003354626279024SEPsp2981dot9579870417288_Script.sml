
(** File: FPTaylorReal2Float, function: logexp **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__1dot0003354626279024SEPsp2981dot9579870417288_";

val _ = realZeroLib.useBinary := true;

(* err = 1.26501888853525076370541701267525959546412916992743 *)
(* infnorm = 1.20332032529365075346669634789091786426714672889338 *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "e");
    poly := [
    (328496061657965)/(281474976710656);
    (36623808148653264060712331229296978563070297241211)/(1000000000000000000000000000000000000000000000000000);
    (-76563198585068452297480723345302067173179239034653)/(1000000000000000000000000000000000000000000000000000000);
    (8142698231910505756052024014732260148718978598481)/(125000000000000000000000000000000000000000000000000000000);
    (-2959267877264644979857596973145331261615537110643)/(125000000000000000000000000000000000000000000000000000000000);
    (1535838395914244644466570869950913216072841305411)/(500000000000000000000000000000000000000000000000000000000000000)
    ];
  eps := (126501888853525076370541701267525959546412916992743)/(100000000000000000000000000000000000000000000000000) ;
  iv := [("e",
    ((4613233066738190827)/(4611686018427387904),
    (6557394960583791)/(2199023255552)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``32:num``;

val _ = export_theory();
      