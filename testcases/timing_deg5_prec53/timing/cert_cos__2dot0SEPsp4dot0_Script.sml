
(** File: CompoundFunction, function: compundExp2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__2dot0SEPsp4dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 4.1549264087979456709808084694798891142837012022774e-5 *)
(* infnorm = 4.146289155566129488063246944089610184723833907895e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (3421475413837004597716884291003225371241569519043)/(10000000000000000000000000000000000000000000000000);
    (6552424203363177435122111091914121061563491821289)/(5000000000000000000000000000000000000000000000000);
    (-15329192197897210103718634854885749518871307373047)/(10000000000000000000000000000000000000000000000000);
    (221441473105343)/(562949953421312);
    (-44828082453348447322660774716496234759688377380371)/(2000000000000000000000000000000000000000000000000000);
    (-5605716478455965556121354254059951927047222852707)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (20774632043989728354904042347399445571418506011387)/(500000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((2)/(1),
    (4)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      