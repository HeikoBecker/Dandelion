
(** File: TransBenchsErrorBoundsSmall, function: pendulum1 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__1dot0SEPsp3dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 3.818406315006592715559117006823923185213092174896e-5 *)
(* infnorm = 3.8120075773150091570088948434587141178401097212686e-5 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "t");
    poly := [
    (53920980574067731150300630815763724967837333679199)/(1000000000000000000000000000000000000000000000000000);
    (40664303430176157450048890495963860303163528442383)/(50000000000000000000000000000000000000000000000000);
    (6494149570753787736876461167412344366312026977539)/(25000000000000000000000000000000000000000000000000);
    (-395475644547725)/(1125899906842624);
    (6909514884251966027051139462855644524097442626953)/(100000000000000000000000000000000000000000000000000);
    (-165307154108760884399231816388464721967466175556183)/(50000000000000000000000000000000000000000000000000000)
    ];
  eps := (238650394687912044722444812926495199075818260931)/(6250000000000000000000000000000000000000000000000000) ;
  iv := [("t",
    ((1)/(1),
    (3)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      