
(** File: TransBenchsErrorBoundsSmall, function: ex2_7 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__NEG1dot57SEPsp1dot57_";

val _ = realZeroLib.useBinary := true;

(* err = 1.04011056649702638885125510055140738920154830877323e-3 *)
(* infnorm = 5.9508400463885680837184926070909519604928519676147e-4 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (99940498880711470253146444520098157227039337158203)/(100000000000000000000000000000000000000000000000000);
    (12962303128304399539595723959369596555574188911919)/(4000000000000000000000000000000000000000000000000000000000000);
    (-4359251119491)/(8796093022208);
    (-36528188349649142875174538884442218154499637527977)/(10000000000000000000000000000000000000000000000000000000000000);
    (18398181872552449994673295918801159132272005081177)/(500000000000000000000000000000000000000000000000000);
    (23714251034867950111307889673927721922719324965101)/(25000000000000000000000000000000000000000000000000000000000000)
    ];
  eps := (104011056649702638885125510055140738920154830877323)/(100000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-157)/(100),
    (157)/(100)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      