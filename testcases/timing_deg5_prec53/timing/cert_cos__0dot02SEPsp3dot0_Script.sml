
(** File: Benchmarks_small, function: forwardk2jX **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot02SEPsp3dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 6.2153112349467575332934209416673512687168659207558e-5 *)
(* infnorm = 6.2019655445819588182470452900228487468657021862686e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "_tmp10");
    poly := [
    (100010494527183935176140039402525871992111206054687)/(100000000000000000000000000000000000000000000000000);
    (-23596921433100335845078898699966885033063590526581)/(10000000000000000000000000000000000000000000000000000);
    (-6111674433349351814870331622842059005051851272583)/(12500000000000000000000000000000000000000000000000);
    (-10088734090784978736365928853047080338001251220703)/(500000000000000000000000000000000000000000000000000);
    (59173398551084846475056622239208081737160682678223)/(1000000000000000000000000000000000000000000000000000);
    (-37670955632348127745112620345935283694416284561157)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (31076556174733787666467104708336756343584329603779)/(500000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp10",
    ((1)/(50),
    (3)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      