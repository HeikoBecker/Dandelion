
(** File: TransBenchsErrorBoundsSmall, function: stoutemyerEq2007 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot0SEPsp1dot0ENEG8_";

val _ = realZeroLib.useBinary := true;

(* err = 8.6903572088248038199050635936747660425502557768e-21 *)
(* infnorm = 7.992639440068366633764284526128765656410919572502e-33 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "x");
    poly := [
    (1)/(1);
    (1)/(1);
    (1)/(2);
    (41666666666666664353702032030923874117434024810791)/(250000000000000000000000000000000000000000000000000);
    (4166666888711269278733340115650207735598087310791)/(100000000000000000000000000000000000000000000000000);
    (-61140568774847817157258589304547058418393135070801)/(500000000000000000000000000000000000000000000000000)
    ];
  eps := (10862946511031004774881329492093457553187819721)/(1250000000000000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (1)/(100000000)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      