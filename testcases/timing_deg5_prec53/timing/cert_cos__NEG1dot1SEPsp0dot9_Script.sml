
(** File: TransBenchsErrorBoundsSmall, function: ex2_11 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__NEG1dot1SEPsp0dot9_";

val _ = realZeroLib.useBinary := true;

(* err = 6.5500268619706594208845979975935114285791273443807e-5 *)
(* infnorm = 4.1670597484887002860432578876259695794485455406948e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (6249783381158049988535196916927816346287727355957)/(6250000000000000000000000000000000000000000000000);
    (5597956760596330561680078474751098838169127702713)/(40000000000000000000000000000000000000000000000000000);
    (-24967932620301996893275031652592588216066360473633)/(50000000000000000000000000000000000000000000000000);
    (-38240818961946296912143838930830952449468895792961)/(50000000000000000000000000000000000000000000000000000);
    (39826343106799007298679526911655557341873645782471)/(1000000000000000000000000000000000000000000000000000);
    (39656860885212477912248330014222119643818587064743)/(50000000000000000000000000000000000000000000000000000)
    ];
  eps := (65500268619706594208845979975935114285791273443807)/(1000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-11)/(10),
    (9)/(10)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      