
(** File: TransBenchsErrorBoundsSmall, function: forwardk2jY **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__NEG6dot28SEPsp6dot28_";

val _ = realZeroLib.useBinary := true;

(* err = 0.32888160509676855505407499813274884690499043952324 *)
(* infnorm = 0.3250855614137554816641865631293730050978744887646 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "_tmp37");
    poly := [
    (-26416169806343315307280241835169616593237407187189)/(500000000000000000000000000000000000000000000000000000000000);
    (7485110973387751331920014763454673811793327331543)/(12500000000000000000000000000000000000000000000000);
    (811092402523854895042417455491151612179123731039)/(25000000000000000000000000000000000000000000000000000000000);
    (-65817880473529502549645542330836178734898567199707)/(1000000000000000000000000000000000000000000000000000);
    (-19295519176665578738132933130654231876181803340131)/(10000000000000000000000000000000000000000000000000000000000000);
    (65842145467071239248874059413196846435312181711197)/(50000000000000000000000000000000000000000000000000000)
    ];
  eps := (8222040127419213876351874953318721172624760988081)/(25000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp37",
    ((-157)/(25),
    (157)/(25)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      