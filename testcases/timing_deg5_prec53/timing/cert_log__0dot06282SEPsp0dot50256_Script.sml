
(** File: MLClassifier, function: predictGaussianNB **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__0dot06282SEPsp0dot50256_";

val _ = realZeroLib.useBinary := true;

(* err = 8.3846631392422850695606968554299824383459334637714e-3 *)
(* infnorm = 4.7638306352644154215641767601929329909565633506584e-3 *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "_tmp6");
    poly := [
    (-40508629610820312549890331865753978490829467773437)/(10000000000000000000000000000000000000000000000000);
    (3883678379957863)/(140737488355328);
    (-4777397932927769)/(35184372088832);
    (7070858509940009)/(17592186044416);
    (-2696310647865255)/(4398046511104);
    (3260662548403137)/(8796093022208)
    ];
  eps := (41923315696211425347803484277149912191729667318857)/(5000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp6",
    ((3141)/(50000),
    (3141)/(6250)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``32:num``;

val _ = export_theory();
      