
(** File: TransBenchsErrorBoundsSmall, function: forwardk2jY **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__NEG3dot14SEPsp3dot14_";

val _ = realZeroLib.useBinary := true;

(* err = 8.167526878310613105896012413762384711979446060287e-3 *)
(* infnorm = 6.8277368356206061310598862247349240685806380233903e-3 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "theta1");
    poly := [
    (-1729210020270864806447043457902180496957300626093)/(3125000000000000000000000000000000000000000000000000000000);
    (9844584217973025852543855762633029371500015258789)/(10000000000000000000000000000000000000000000000000);
    (11948551839481874316694773525190237384308034052083)/(10000000000000000000000000000000000000000000000000000000000);
    (-3837150465268693994014270742809458170086145401001)/(25000000000000000000000000000000000000000000000000);
    (-23924092836503781432023285779164996356360717300049)/(100000000000000000000000000000000000000000000000000000000000);
    (54677975561481829969157075765906483866274356842041)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (8167526878310613105896012413762384711979446060287)/(1000000000000000000000000000000000000000000000000000) ;
  iv := [("theta1",
    ((-157)/(50),
    (157)/(50)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      