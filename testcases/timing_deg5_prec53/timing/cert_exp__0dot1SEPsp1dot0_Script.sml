
(** File: TransBenchsErrorBoundsSmall, function: integrateStoutemyer2007 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot1SEPsp1dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 6.4532020173644586925075168449082858120702283654514e-7 *)
(* infnorm = 6.2985978454553696361020470254084651320714258198881e-7 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "x");
    poly := [
    (312495205681310832257491227892387541942298412323)/(312500000000000000000000000000000000000000000000);
    (1126223248082435)/(1125899906842624);
    (49810037635938858580075816462340299040079116821289)/(100000000000000000000000000000000000000000000000000);
    (86238573086286518520893196182441897690296173095703)/(500000000000000000000000000000000000000000000000000);
    (8212053276132851367674625464587734313681721687317)/(250000000000000000000000000000000000000000000000000);
    (9114762546201840261519966368553014035569503903389)/(625000000000000000000000000000000000000000000000000)
    ];
  eps := (32266010086822293462537584224541429060351141827257)/(50000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((1)/(10),
    (1)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      