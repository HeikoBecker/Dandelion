
(** File: TransBenchsErrorBoundsSmall, function: ex2_4 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__NEG1dot57SEPsp1dot57_";

val _ = realZeroLib.useBinary := true;

(* err = 6.7559855973781514883528260933180709107168435018256e-5 *)
(* infnorm = 6.7472254140767690954833550022764313612243112778856e-5 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (-138295493834856624224671738928290609378472797441617)/(50000000000000000000000000000000000000000000000000000000000000);
    (49984883603578939004208336882584262639284133911133)/(50000000000000000000000000000000000000000000000000);
    (4602167335044428448923648613996242526247293369579)/(200000000000000000000000000000000000000000000000000000000000);
    (-8283751522103660613893794106843415647745132446289)/(50000000000000000000000000000000000000000000000000);
    (-7178443321758634766549253172069049860892775427601)/(400000000000000000000000000000000000000000000000000000000000);
    (15030340124260460968330654907276766607537865638733)/(2000000000000000000000000000000000000000000000000000)
    ];
  eps := (4222490998361344680220516308323794319198027188641)/(62500000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-157)/(100),
    (157)/(100)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      