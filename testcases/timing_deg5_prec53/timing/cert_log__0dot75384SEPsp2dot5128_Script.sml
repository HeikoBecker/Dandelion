
(** File: MLClassifier, function: predictGaussianNB **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__0dot75384SEPsp2dot5128_";

val _ = realZeroLib.useBinary := true;

(* err = 2.21649954429724367936688988294147040358325328703387e-4 *)
(* infnorm = 2.21519355152599647663237699100177894544519030482353e-4 *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "_tmp");
    poly := [
    (-2471248836748657085049529769094078801572322845459)/(1250000000000000000000000000000000000000000000000);
    (36125360445385044094734894315479323267936706542969)/(10000000000000000000000000000000000000000000000000);
    (-2831727173621901)/(1125899906842624);
    (11262388522059960660470778748276643455028533935547)/(10000000000000000000000000000000000000000000000000);
    (-6855986304102540396243625764327589422464370727539)/(25000000000000000000000000000000000000000000000000);
    (13805144802383033375559051592063042335212230682373)/(500000000000000000000000000000000000000000000000000)
    ];
  eps := (221649954429724367936688988294147040358325328703387)/(1000000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp",
    ((9423)/(12500),
    (3141)/(1250)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``32:num``;

val _ = export_theory();
      