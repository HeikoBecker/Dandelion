
(** File: AnalysisSimple, function: e1 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot0SEPsp0dot5_";

val _ = realZeroLib.useBinary := true;

(* err = 1.6611710139127583701348177216854970631517608569586e-8 *)
(* infnorm = 1.3640897878459354009761575354096404024001622917567e-8 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "x");
    poly := [
    (4999999931796150209883933257515309378504753112793)/(5000000000000000000000000000000000000000000000000);
    (100000194127181663006354028766509145498275756835937)/(100000000000000000000000000000000000000000000000000);
    (24997763926745147911034905519045423716306686401367)/(50000000000000000000000000000000000000000000000000);
    (4176053668130846191486327256825461518019437789917)/(25000000000000000000000000000000000000000000000000);
    (20126672336488373588059275220985000487416982650757)/(500000000000000000000000000000000000000000000000000);
    (107320975289225423870975717477449506986886262893677)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (8305855069563791850674088608427485315758804284793)/(500000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (1)/(2)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      