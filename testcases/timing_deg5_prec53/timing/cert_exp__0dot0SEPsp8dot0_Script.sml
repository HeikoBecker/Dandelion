
(** File: FPTaylorReal2Float, function: logexp **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__0dot0SEPsp8dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 22.879403348720991757295420784054020931908655426429 *)
(* infnorm = 18.134851707147312419111464846060203174400158617071 *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "x");
    poly := [
    (-2411497855132297)/(140737488355328);
    (1243022335723771)/(8796093022208);
    (-3055259515109661)/(17592186044416);
    (5385020092846283)/(70368744177664);
    (-3908689664567701)/(281474976710656);
    (93573449189321888930237491877051070332527160644531)/(100000000000000000000000000000000000000000000000000)
    ];
  eps := (22879403348720991757295420784054020931908655426429)/(1000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (8)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``32:num``;

val _ = export_theory();
      