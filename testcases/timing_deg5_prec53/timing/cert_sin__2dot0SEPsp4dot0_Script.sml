
(** File: CompoundFunction, function: compundExp2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__2dot0SEPsp4dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 7.2922127815520063129366455464134330249255046424995e-6 *)
(* infnorm = 7.1437179355889306591819313424638185377158349307908e-6 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (9862849953678910763787968107862980104982852935791)/(25000000000000000000000000000000000000000000000000);
    (17692948993450155481532704015990020707249641418457)/(200000000000000000000000000000000000000000000000000);
    (984801963174405)/(1125899906842624);
    (-15275306676892025370406713591364677995443344116211)/(25000000000000000000000000000000000000000000000000);
    (30924741105683939412784866362926550209522247314453)/(250000000000000000000000000000000000000000000000000);
    (-15746476076057346754621946161023515742272138595581)/(2000000000000000000000000000000000000000000000000000)
    ];
  eps := (14584425563104012625873291092826866049851009284999)/(2000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((2)/(1),
    (4)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      