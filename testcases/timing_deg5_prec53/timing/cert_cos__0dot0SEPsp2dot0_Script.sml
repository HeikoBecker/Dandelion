
(** File: TransBenchsErrorBoundsSmall, function: ex2_3 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot0SEPsp2dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 2.2934551906112293648268849149119402933402266525379e-5 *)
(* infnorm = 2.29044521175174146315977703851986454950696903876855e-5 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (12500286304827110117621202789450762793421745300293)/(12500000000000000000000000000000000000000000000000);
    (-43748187934005442010360065197005496884230524301529)/(50000000000000000000000000000000000000000000000000000);
    (-49456792829601026184604961599688977003097534179687)/(100000000000000000000000000000000000000000000000000);
    (-62278802648858128110376242148049641400575637817383)/(5000000000000000000000000000000000000000000000000000);
    (54841335035367227979108406543673481792211532592773)/(1000000000000000000000000000000000000000000000000000);
    (-66856397554201207195090361778966325800865888595581)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (22934551906112293648268849149119402933402266525379)/(1000000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (2)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      