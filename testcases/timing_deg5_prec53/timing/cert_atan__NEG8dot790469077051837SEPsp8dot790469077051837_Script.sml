
(** File: FPTaylorReal2Float, function: azimuth **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_atan__NEG8dot790469077051837SEPsp8dot790469077051837_";

val _ = realZeroLib.useBinary := true;

(* err = 0.224077558802297908385504927414718606264270559995194 *)
(* infnorm = 0.22226057416716988399492381182041916518236686657644 *)
Definition atan_example_def:
  atan_example =
  <|
    transc := Fun Atn (Var "_tmp1");
    poly := [
    (-583855931340537434392291457721816880233056679117)/(80000000000000000000000000000000000000000000000000000000000);
    (651254478962049)/(1125899906842624);
    (17256089987847303398823269958299901020298827702959)/(2000000000000000000000000000000000000000000000000000000000000);
    (-6889447244671674346061518434680692735128104686737)/(500000000000000000000000000000000000000000000000000);
    (-22682848254764085875535935413997472165771422669689)/(50000000000000000000000000000000000000000000000000000000000000);
    (14180770482389289672132785813385424944499391131103)/(125000000000000000000000000000000000000000000000000000)
    ];
  eps := (112038779401148954192752463707359303132135279997597)/(500000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp1",
    ((-10020221492936158063531838401233967941897158656)/(1139896108513103022459289132954062320003592137),
    (10020221492936158063531838401233967941897158656)/(1139896108513103022459289132954062320003592137)))];
  |>
End

Theorem checkerSucceeds = validateCert atan_example_def ``32:num``;

val _ = export_theory();
      