
(** File: MLClassifier, function: predictGaussianNB **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__0dot56538SEPsp0dot9423_";

val _ = realZeroLib.useBinary := true;

(* err = 1.43449593698393339011094279404158285952828174972812e-6 *)
(* infnorm = 1.41653274801302189495452198074987136625574278647235e-6 *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "_tmp2");
    poly := [
    (-2927916207523465)/(1125899906842624);
    (1926345528975469)/(281474976710656);
    (-2619468850341119)/(281474976710656);
    (4718476570230689)/(562949953421312);
    (-42190373520653556838055919797625392675399780273437)/(10000000000000000000000000000000000000000000000000);
    (45018948090094251801573932425526436418294906616211)/(50000000000000000000000000000000000000000000000000)
    ];
  eps := (35862398424598334752773569851039571488207043743203)/(25000000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp2",
    ((28269)/(50000),
    (9423)/(10000)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``32:num``;

val _ = export_theory();
      