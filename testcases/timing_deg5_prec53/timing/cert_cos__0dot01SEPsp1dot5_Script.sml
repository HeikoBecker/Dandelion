
(** File: Benchmarks_small, function: forwardk2jX **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot01SEPsp1dot5_";

val _ = realZeroLib.useBinary := true;

(* err = 5.3280057704801129418495491144845466792643088679334e-6 *)
(* infnorm = 5.3115436461525575002076917422876415693087726875193e-6 *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "theta1");
    poly := [
    (25000204277692195109494832649943418800830841064453)/(25000000000000000000000000000000000000000000000000);
    (-15427319594239654980405429540724071557633578777313)/(50000000000000000000000000000000000000000000000000000);
    (-49767540055763415107747960064443759620189666748047)/(100000000000000000000000000000000000000000000000000);
    (-13330907754524246380811725032344838837161660194397)/(2000000000000000000000000000000000000000000000000000);
    (6313478774022961148570942668811767362058162689209)/(125000000000000000000000000000000000000000000000000);
    (-27807848943891340549872115417429085937328636646271)/(5000000000000000000000000000000000000000000000000000)
    ];
  eps := (26640028852400564709247745572422733396321544339667)/(5000000000000000000000000000000000000000000000000000000) ;
  iv := [("theta1",
    ((1)/(100),
    (3)/(2)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``32:num``;

val _ = export_theory();
      