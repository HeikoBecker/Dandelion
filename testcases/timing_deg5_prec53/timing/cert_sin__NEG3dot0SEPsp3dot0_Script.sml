
(** File: TransBenchsErrorBoundsSmall, function: sinxx10 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__NEG3dot0SEPsp3dot0_";

val _ = realZeroLib.useBinary := true;

(* err = 6.3143661222297591391345001496756222624636897770237e-3 *)
(* infnorm = 5.1002178896065849384592975741625198894757940570365e-3 *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (-38115963617620288816555924111173416640729882942651)/(100000000000000000000000000000000000000000000000000000000000);
    (12348403334569216238669753238355042412877082824707)/(12500000000000000000000000000000000000000000000000);
    (2804759147627875588426721467742312775620061593429)/(3125000000000000000000000000000000000000000000000000000000);
    (-7772237040187469914176432439489872194826602935791)/(50000000000000000000000000000000000000000000000000);
    (-9811936140508808413239265369090898183390692111061)/(50000000000000000000000000000000000000000000000000000000000);
    (56774130968829826168753349691087350947782397270203)/(10000000000000000000000000000000000000000000000000000)
    ];
  eps := (63143661222297591391345001496756222624636897770237)/(10000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-3)/(1),
    (3)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``32:num``;

val _ = export_theory();
      