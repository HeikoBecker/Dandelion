
(** File: TransBenchsErrorBoundsSmall, function: integrateStoutemyer2007 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sqrt__0dot1SEPsp1dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (40462614176081246778888892922021184572841757623491)/(10000000000000000000000000000000000000000000000000000) *)
Definition sqrt_example_def:
  sqrt_example =
  <|
    transc := Fun Sqrt (Var "x");
    poly := [
    (8725552378291510924324114739647484384477138519287)/(50000000000000000000000000000000000000000000000000);
    (19727347762361407967901527626963797956705093383789)/(12500000000000000000000000000000000000000000000000);
    (-358358806954127)/(281474976710656);
    (26217115521714223769222940063627902418375015258789)/(50000000000000000000000000000000000000000000000000)
    ];
  eps := (40462614176081246778888892922021184572841757623491)/(10000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((1)/(10),
    (1)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sqrt_example_def ``20:num``;

val _ = export_theory();
      