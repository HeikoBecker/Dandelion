
(** File: Benchmarks_small, function: forwardk2jX **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot02SEPsp3dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (47654015499465436495905432641054357057836537503299)/(10000000000000000000000000000000000000000000000000000) *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "_tmp10");
    poly := [
    (24859455893043300167555287316645262762904167175293)/(25000000000000000000000000000000000000000000000000);
    (73318784030717398803034257070976309478282928466797)/(1000000000000000000000000000000000000000000000000000);
    (-67452376038484207487755384136107750236988067626953)/(100000000000000000000000000000000000000000000000000);
    (143138387595834165599839593596698250621557235717773)/(1000000000000000000000000000000000000000000000000000)
    ];
  eps := (47654015499465436495905432641054357057836537503299)/(10000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp10",
    ((1)/(50),
    (3)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``20:num``;

val _ = export_theory();
      