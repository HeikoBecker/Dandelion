
(** File: Herbie, function: complex_square_root **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sqrt__0dot00482842712474619SEPsp48dot2842712474619_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (29653591545087213820654235552586537393403117533823)/(100000000000000000000000000000000000000000000000000) *)
Definition sqrt_example_def:
  sqrt_example =
  <|
    transc := Fun Sqrt (Var "_tmp");
    poly := [
    (4537130563901772828394598491286160424351692199707)/(12500000000000000000000000000000000000000000000000);
    (313370887207438560129180160629402962513267993927)/(781250000000000000000000000000000000000000000000);
    (-23731477452405926042988681956558139063417911529541)/(2000000000000000000000000000000000000000000000000000);
    (13482490217433116728128206229797569903894327580929)/(100000000000000000000000000000000000000000000000000000)
    ];
  eps := (29653591545087213820654235552586537393403117533823)/(100000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp",
    ((695849683193361119)/(144115188075855872000),
    (13590814124870337)/(281474976710656)))];
  |>
End

Theorem checkerSucceeds = validateCert sqrt_example_def ``20:num``;

val _ = export_theory();
      