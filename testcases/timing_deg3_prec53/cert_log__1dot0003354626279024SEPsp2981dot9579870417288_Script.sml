
(** File: FPTaylorReal2Float, function: logexp **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__1dot0003354626279024SEPsp2981dot9579870417288_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (39943940716368801865484357101763001639263904279969)/(25000000000000000000000000000000000000000000000000) *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "e");
    poly := [
    (19739277447512268426343950977752683684229850769043)/(12500000000000000000000000000000000000000000000000);
    (16159147964063105828991240286995889618992805480957)/(1000000000000000000000000000000000000000000000000000);
    (-14637092018363000693473643942787987271003657951951)/(1250000000000000000000000000000000000000000000000000000);
    (24119036865159347115291675416569316947601464562467)/(10000000000000000000000000000000000000000000000000000000000)
    ];
  eps := (39943940716368801865484357101763001639263904279969)/(25000000000000000000000000000000000000000000000000) ;
  iv := [("e",
    ((4613233066738190827)/(4611686018427387904),
    (6557394960583791)/(2199023255552)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``20:num``;

val _ = export_theory();
      