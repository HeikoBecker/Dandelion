
(** File: TransBenchsErrorBoundsSmall, function: ex2_6 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_tan__NEG1dot0SEPsp1dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (5175829586618534741139313637242533503373301054057)/(250000000000000000000000000000000000000000000000000) *)
Definition tan_example_def:
  tan_example =
  <|
    transc := Fun Tan (Var "x");
    poly := [
    (-23946319079440142155614718674652794533352917483171)/(200000000000000000000000000000000000000000000000000000000000);
    (45421308558964984536387987645866815000772476196289)/(50000000000000000000000000000000000000000000000000);
    (19031833988682339972748339189346708510974792716297)/(20000000000000000000000000000000000000000000000000000000000);
    (15720572327851808913656839195027714595198631286621)/(25000000000000000000000000000000000000000000000000)
    ];
  eps := (5175829586618534741139313637242533503373301054057)/(250000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-1)/(1),
    (1)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert tan_example_def ``20:num``;

val _ = export_theory();
      