
(** File: TransBenchsErrorBoundsSmall, function: ex2_2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__NEG2dot0SEPsp2dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (1713916840070422889280927039449237922602094157481)/(25000000000000000000000000000000000000000000000000) *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (4659617614477699620856299134175060316920280456543)/(5000000000000000000000000000000000000000000000000);
    (-1842443811212130023585166712364434441276395126863)/(31250000000000000000000000000000000000000000000000000000000);
    (-35403670907989098770585201236826833337545394897461)/(100000000000000000000000000000000000000000000000000);
    (1842443811212130023585166712364434441276395126863)/(125000000000000000000000000000000000000000000000000000000000)
    ];
  eps := (1713916840070422889280927039449237922602094157481)/(25000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-2)/(1),
    (2)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``20:num``;

val _ = export_theory();
      