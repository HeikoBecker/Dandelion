
(** File: TransBenchsErrorBoundsSmall, function: forwardk2jX **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__NEG3dot14SEPsp3dot14_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (30583499291303701585534109689793746600487564553493)/(100000000000000000000000000000000000000000000000000) *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "theta1");
    poly := [
    (34741093283543850178674006201617885380983352661133)/(50000000000000000000000000000000000000000000000000);
    (-112534069853131536534618922779224167718403748494893)/(100000000000000000000000000000000000000000000000000000000000);
    (-2028478566969361962524232012583524920046329498291)/(10000000000000000000000000000000000000000000000000);
    (4565461878905089323115910155889696220299356355099)/(40000000000000000000000000000000000000000000000000000000000)
    ];
  eps := (30583499291303701585534109689793746600487564553493)/(100000000000000000000000000000000000000000000000000) ;
  iv := [("theta1",
    ((-157)/(50),
    (157)/(50)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``20:num``;

val _ = export_theory();
      