
(** File: CompoundFunction, function: compundExp **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_exp__NEG3dot7568024953079284SEPsp0dot9179327838016329_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (26232659318216668703406034835903470683622469288311)/(500000000000000000000000000000000000000000000000000) *)
Definition exp_example_def:
  exp_example =
  <|
    transc := Fun Exp (Var "_tmp");
    poly := [
    (3223076489250921439211339247776777483522891998291)/(3125000000000000000000000000000000000000000000000);
    (10937640019589440765201970862108282744884490966797)/(10000000000000000000000000000000000000000000000000);
    (44021638198444568157441381117678247392177581787109)/(100000000000000000000000000000000000000000000000000);
    (29833343736416450403536870794596325140446424484253)/(500000000000000000000000000000000000000000000000000)
    ];
  eps := (26232659318216668703406034835903470683622469288311)/(500000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp",
    ((-16919134317973335)/(4503599627370496),
    (1033500435770049)/(1125899906842624)))];
  |>
End

Theorem checkerSucceeds = validateCert exp_example_def ``20:num``;

val _ = export_theory();
      