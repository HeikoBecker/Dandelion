
(** File: MLClassifier, function: predictGaussianNB **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__0dot12564SEPsp1dot8846_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (79513323637521808561193068388920557518832574549023)/(1000000000000000000000000000000000000000000000000000) *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "_tmp4");
    poly := [
    (-2980045956797179)/(1125899906842624);
    (56669714755866200661671427951660007238388061523437)/(10000000000000000000000000000000000000000000000000);
    (-19974692688077280156022652590763755142688751220703)/(5000000000000000000000000000000000000000000000000);
    (102605081528315222882952184590976685285568237304687)/(100000000000000000000000000000000000000000000000000)
    ];
  eps := (79513323637521808561193068388920557518832574549023)/(1000000000000000000000000000000000000000000000000000) ;
  iv := [("_tmp4",
    ((3141)/(25000),
    (9423)/(5000)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``20:num``;

val _ = export_theory();
      