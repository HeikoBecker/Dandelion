
(** File: CompoundFunction, function: compundExp **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__3dot0SEPsp5dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (43315321242239233227054576507911280893058494391143)/(10000000000000000000000000000000000000000000000000000) *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (23819617493952766063003423369082156568765640258789)/(25000000000000000000000000000000000000000000000000);
    (70725826086918697210847994938376359641551971435547)/(50000000000000000000000000000000000000000000000000);
    (-86434615965898120570898299774853512644767761230469)/(100000000000000000000000000000000000000000000000000);
    (2525627864373455530588863382490671938285231590271)/(25000000000000000000000000000000000000000000000000)
    ];
  eps := (43315321242239233227054576507911280893058494391143)/(10000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((3)/(1),
    (5)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``20:num``;

val _ = export_theory();
      