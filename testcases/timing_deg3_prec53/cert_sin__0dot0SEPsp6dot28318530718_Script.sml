
(** File: Daisy, function: polarToCarthesian_y **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__0dot0SEPsp6dot28318530718_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (13356043204276740468723251204319538120039989013083)/(125000000000000000000000000000000000000000000000000) *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "radiant");
    poly := [
    (-52365421701983556890258597604770329780876636505127)/(500000000000000000000000000000000000000000000000000);
    (1969260093411651)/(1125899906842624);
    (-922331283354105)/(1125899906842624);
    (8691926166314452306682625248868134804069995880127)/(100000000000000000000000000000000000000000000000000)
    ];
  eps := (13356043204276740468723251204319538120039989013083)/(125000000000000000000000000000000000000000000000000) ;
  iv := [("radiant",
    ((0)/(1),
    (314159265359)/(50000000000)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``20:num``;

val _ = export_theory();
      