
(** File: Daisy, function: polarToCarthesian_x **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot0SEPsp6dot28318530718_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (30645341428458092203223997197838432205675270379987)/(100000000000000000000000000000000000000000000000000) *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "radiant");
    poly := [
    (367504075393747)/(281474976710656);
    (-31830988613554478394718216804903931915760040283203)/(25000000000000000000000000000000000000000000000000);
    (2026423679726669091483159945710212923586368560791)/(10000000000000000000000000000000000000000000000000);
    (-22877536018573099308249285093727403914143359031641)/(200000000000000000000000000000000000000000000000000000000000)
    ];
  eps := (30645341428458092203223997197838432205675270379987)/(100000000000000000000000000000000000000000000000000) ;
  iv := [("radiant",
    ((0)/(1),
    (314159265359)/(50000000000)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``20:num``;

val _ = export_theory();
      