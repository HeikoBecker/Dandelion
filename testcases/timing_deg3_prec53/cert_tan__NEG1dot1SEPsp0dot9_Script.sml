
(** File: TransBenchsErrorBoundsSmall, function: ex2_11 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_tan__NEG1dot1SEPsp0dot9_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (42447469759409129475775388416379422943063659525149)/(1000000000000000000000000000000000000000000000000000) *)
Definition tan_example_def:
  tan_example =
  <|
    transc := Fun Tan (Var "x");
    poly := [
    (-1422506744345214835939517072915805329103022813797)/(10000000000000000000000000000000000000000000000000000);
    (8316935065324425613297876225260552018880844116211)/(10000000000000000000000000000000000000000000000000);
    (1978290581323034150879047743387673108372837305069)/(2000000000000000000000000000000000000000000000000000);
    (853676176308037)/(1125899906842624)
    ];
  eps := (42447469759409129475775388416379422943063659525149)/(1000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((-11)/(10),
    (9)/(10)))];
  |>
End

Theorem checkerSucceeds = validateCert tan_example_def ``20:num``;

val _ = export_theory();
      