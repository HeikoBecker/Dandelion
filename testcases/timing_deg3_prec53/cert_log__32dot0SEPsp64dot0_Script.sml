
(** File: LogTwo, function: logTwo **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_log__32dot0SEPsp64dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (167934649553292368280883867255213093006456869319)/(312500000000000000000000000000000000000000000000000) *)
Definition log_example_def:
  log_example =
  <|
    transc := Fun Log (Var "x");
    poly := [
    (12330998561519258827079426055206567980349063873291)/(6250000000000000000000000000000000000000000000000);
    (33009880024453264191208745614858344197273254394531)/(500000000000000000000000000000000000000000000000000);
    (-278131186840068831528892390192453376585035584867)/(390625000000000000000000000000000000000000000000000);
    (33474623076739784945186212405943138037400785833597)/(10000000000000000000000000000000000000000000000000000000)
    ];
  eps := (167934649553292368280883867255213093006456869319)/(312500000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((32)/(1),
    (64)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert log_example_def ``20:num``;

val _ = export_theory();
      