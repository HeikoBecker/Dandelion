
(** File: CompoundFunction, function: compundExp2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__2dot0SEPsp4dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (26444121033618334696729299805400610864695913301367)/(5000000000000000000000000000000000000000000000000000) *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (1657117060561071)/(562949953421312);
    (-2569650314756207)/(1125899906842624);
    (25881757934824944911156308080535382032394409179687)/(100000000000000000000000000000000000000000000000000);
    (21809074553370211974057113479830150026828050613403)/(1000000000000000000000000000000000000000000000000000)
    ];
  eps := (26444121033618334696729299805400610864695913301367)/(5000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((2)/(1),
    (4)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``20:num``;

val _ = export_theory();
      