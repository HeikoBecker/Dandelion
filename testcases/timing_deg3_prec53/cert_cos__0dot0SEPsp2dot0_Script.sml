
(** File: TransBenchsErrorBoundsSmall, function: ex2_3 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_cos__0dot0SEPsp2dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (30708939544935951032951519085221624543558280778931)/(10000000000000000000000000000000000000000000000000000) *)
Definition cos_example_def:
  cos_example =
  <|
    transc := Fun Cos (Var "x");
    poly := [
    (3116436251045237235124396590890683000907301902771)/(3125000000000000000000000000000000000000000000000);
    (49087561209090600777837920531965210102498531341553)/(1000000000000000000000000000000000000000000000000000);
    (-6387432064754751115387421123159583657979965209961)/(10000000000000000000000000000000000000000000000000);
    (130081358367072102977246572663716506212949752807617)/(1000000000000000000000000000000000000000000000000000)
    ];
  eps := (30708939544935951032951519085221624543558280778931)/(10000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((0)/(1),
    (2)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert cos_example_def ``20:num``;

val _ = export_theory();
      