
(** File: CompoundFunction, function: compundExp2 **)
open realZeroLib preambleDandelion;

val _ = new_theory "cert_sin__2dot0SEPsp4dot0_";

val _ = realZeroLib.useBinary := true;

(* infnorm = (43206052737938693485245085415022516310179483619011)/(25000000000000000000000000000000000000000000000000000) *)
Definition sin_example_def:
  sin_example =
  <|
    transc := Fun Sin (Var "x");
    poly := [
    (-40785803474913645549904117615369614213705062866211)/(25000000000000000000000000000000000000000000000000);
    (17746276430540806057223335301387123763561248779297)/(5000000000000000000000000000000000000000000000000);
    (-14466575989247669742354673871886916458606719970703)/(10000000000000000000000000000000000000000000000000);
    (153487155227629845644088391054538078606128692626953)/(1000000000000000000000000000000000000000000000000000)
    ];
  eps := (43206052737938693485245085415022516310179483619011)/(25000000000000000000000000000000000000000000000000000) ;
  iv := [("x",
    ((2)/(1),
    (4)/(1)))];
  |>
End

Theorem checkerSucceeds = validateCert sin_example_def ``20:num``;

val _ = export_theory();
      